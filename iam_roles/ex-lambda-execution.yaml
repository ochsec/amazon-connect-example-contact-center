AWSTemplateFormatVersion: 2010-09-09
Description: Lambda Execution Role

Parameters:
    ConnectBucketName:
        Type: String
        Description: The name of the bucket to be used for the storage configs

Resources:
    ExDynamoDBPolicy:
        Type: AWS::IAM::ManagedPolicy
        Properties:
            ManagedPolicyName: ex-connect-iam-dynamodb-policy
            Description: Policy attached to example Connect lambda execution role
            PolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Action:
                          - dynamodb:BatchGetItem
                          - dynamodb:GetItem
                          - dynamodb:Scan
                          - dynamodb:GetShardIterator
                          - dynamodb:Query
                          - dynamodb:PutItem
                          - dynamodb:GetRecords
                          - dynamodb:BatchWriteItem
                          - dynamodb:ListTables
                      Resource:
                          - !Sub arn:${AWS::Partition}:dynamodb:*:${AWS::AccountId}:table/*

    ExCloudWatchPolicy:
        Type: AWS::IAM::ManagedPolicy
        Properties:
            ManagedPolicyName: ex-connect-iam-cloudwatch-policy
            Description: Policy attached to example Connect lambda execution role
            PolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Action:
                          - logs:CreateLogGroup
                          - logs:CreateLogStream
                          - logs:AssociateKmsKey
                          - logs:DisassociateKmsKey
                      Resource: !Sub arn:aws:logs:*:${AWS::AccountId}:log-group:*

                    - Effect: Allow
                      Action:
                          - logs:GetLogEvents
                          - logs:DeleteLogStream
                          - logs:PutLogEvents
                      Resource: !Sub arn:aws:logs:*:${AWS::AccountId}:log-group:*:log-stream:*

                    - Effect: Allow
                      Action:
                          - logs:GetLogRecord
                          - logs:PutDestinationPolicy
                          - logs:GetLogDelivery
                          - logs:DeleteResourcePolicy
                          - logs:PutResourcePolicy
                          - logs:UpdateLogDelivery
                          - logs:DeleteLogDelivery
                          - logs:PutDestination
                          - logs:DescribeResourcePolicies
                          - logs:DescribeDestinations
                      Resource: !Sub arns:aws:logs:*:${AWS::AccountId}:*

    ExConnectPolicy:
        Type: AWS::IAM::ManagedPolicy
        Properties:
            ManagedPolicyName: ex-connect-iam-connect-policy
            Description: Policy attached to example Connect lambda execution role
            PolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Action:
                          - connect:AssociateQuickConnects
                          - connect:AssociateRoutingProfileQueues
                          - connect:CreateQueue
                          - connect:DescribeQueue
                          - connect:DisassociateQueueQuickConnects
                          - connect:ListQueueQuickConnects
                          - connect:UpdateQueueHoursOfOperation
                          - connect:UpdateQueueMaxContacts
                          - connect:UpdateQueueName
                          - connect:UpdateQueueOutboundCallerConfig
                          - connect:UpdateQueueStatus
                          - connect:UpdateQuickConnectConfig
                          - connect:UpdateRoutingProfileDefaultOutboundQueue
                      Resource: !Sub arn:${AWS::Partition}:connect:*:${AWS::AccountId}:instance/*/queue/*

                    - Effect: Allow
                      Action:
                          - connect:CreateContactFlow
                          - connect:DescribeContactFlow
                          - connect:ListContactFlows
                          - connect:UpdateContactFlowContent
                          - connect:UpdateContactAttributes
                          - connect:ListQueues
                          - connect:ListUsers
                          - connect:DescribeUser
                          - connect:SearchUsers
                          - connect:SearchQueues
                      Resource: !Sub arn:${AWS::Partition}:connect:*:${AWS::AccountId}:instance/*

                    - Effect: Allow
                      Action:
                          - connect:ResumeContactRecording
                          - connect:SuspendContactRecording
                          - connect:StartContactRecording
                          - connect:StopContactRecording
                          - connect:GetContactAttributes
                          - connect:StopContact
                      Resource: !Sub arn:${AWS::Partition}:connect:*:${AWS::AccountId}:instance/*/contact/*

                    - Effect: Allow
                      Action:
                          - lex:GetBots
                          - lex:ListBots
                          - lex:ListBotAliases
                      Resource: !Sub arn:${AWS::Partition}:lex:*:${AWS::AccountId}:bot/*

                    - Effect: Allow
                      Action:
                          - kms:DescribeKey
                          - kms:ListAliases
                      Resource: !Sub arn:${AWS::Partition}:kms:*:${AWS::AccountId}:key/*

                    - Effect: Allow
                      Action:
                          - kinesis:DescribeStream
                          - kinesis:ListStreams
                      Resource: !Sub arn:${AWS::Partition}:kinesis:*:${AWS::AccountId}:stream/*

                    - Effect: Allow
                      Action:
                          - firehose:DescribeDeliveryStream
                          - firehose:ListDeliveryStream
                      Resource: !Sub arn:${AWS::Partition}:firehose:*:${AWS::AccountId}:deliverystream/*

                    - Effect: Allow
                      Action:
                          - s3:GetBucketAcl
                          - s3:GetBucketLocation
                          - s3:ListAllMyBuckets
                      Resource:
                          - !Sub arn:aws:s3:::${ConnectBucketName}
                          - !Sub arn:aws:s3:::${ConnectBucketName}/*

                    - Effect: Allow
                      Action: servicequotas:GetServiceQuota
                      Resource: arn:aws:servicequotas:*:*:connect/*

                    - Effect: Allow
                      Action: iam:CreateServiceLinkedRole
                      Resource: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/*
                      Condition:
                          StringEquals:
                              iam:AWSServiceName: connect.amazonaws.com

    ExAPIGatewayPolicy:
        Type: AWS::IAM::ManagedPolicy
        Properties:
            ManagedPolicyName: ex-connect-iam-apigw-policy
            Description: Policy attached to example Connect lambda execution role
            PolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Action:
                          - execute-api:Invoke
                          - execute-api:ManageConnections
                      Resource:
                          - !Sub arn:${AWS::Partition}:execute-api:*:${AWS::AccountId}:*

    ExSSMPolicy:
        Type: AWS::IAM::ManagedPolicy
        Properties:
            ManagedPolicyName: ex-connect-iam-ssm-policy
            Description: Policy attached to example Connect lambda execution role
            PolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Action:
                          - ssm:Describe*
                          - ssm:Get*
                          - ssm:Lists*
                      Resource: "*"

    ExLambdaPolicy:
        Type: AWS::IAM::ManagedPolicy
        Properties:
            ManagedPolicyName: ex-connect-iam-lambda-policy
            Description: Policy attached to example Connect lambda execution role
            PolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Action: lambda:InvokeFunction
                      Resource: !Sub arn:${AWS::Partition}:lambda:*:${AWS::AccountId}:function:*
                    - Effect: Allow
                      Action:
                          - iam:PassRole
                          - iam:GetPolicy
                          - iam:GetPolicyVersion
                          - iam:GetRole
                          - iam:GetRolePolicy
                          - iam:ListAttachedRolePolicies
                          - iam:ListRoles
                          - iam:ListRolePolicies
                      Resource:
                          - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/*
                          - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/*
                      Condition:
                          StringEquals:
                              iam:PassedToService: lambda.amazonaws.com

    ExSTSPolicy:
        Type: AWS::IAM::ManagedPolicy
        Properties:
            ManagedPolicyName: ex-connect-iam-sts-policy
            Description: Policy attached to example Connect lambda execution role
            PolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Action: sts:AssumeRole
                      Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/*

    ExLambdaExecutionRole:
        Type: AWS::IAM::Role
        Properties:
            RoleName: ex-connect-lambda-execution-role
            Description: Lambda execution role for example Amazon Connect
            ManagedPolicyArns:
                - !Ref ExDynamoDBPolicy
                - !Ref ExCloudWatchPolicy
                - !Ref ExConnectPolicy
                - !Ref ExAPIGatewayPolicy
                - !Ref ExSSMPolicy
                - !Ref ExLambdaPolicy
                - !Ref ExSTSPolicy
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Principal:
                          Service: lambda.amazonaws.com
                          AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
                      Action:
                          - sts:AssumeRole
