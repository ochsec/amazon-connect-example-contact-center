AWSTemplateFormatVersion: 2010-09-09
Description: Deploys the VPC for the example Amazon Connect contact center

Resources:
  ExConnectVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16

  ExSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ExConnectVpc
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: !Select [0, !GetAZs '']

  ExSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ExConnectVpc
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [1, !GetAZs '']

  ExRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ExConnectVpc

  ExDynamoDBVPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref ExConnectVpc
      ServiceName: !Sub com.amazonaws.${AWS::Region}.dynamodb
      VpcEndpointType: Gateway
      RouteTableIds:
        - !Ref ExRouteTable1

  ExLambdaVPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref ExConnectVpc
      ServiceName: !Sub com.amazonaws.${AWS::Region}.lambda
      VpcEndpointType: Interface
      SubnetIds:
        - !Ref ExSubnet1
        - !Ref ExSubnet2

  ExSSMVPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref ExConnectVpc
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ssm
      VpcEndpointType: Interface
      SubnetIds:
        - !Ref ExSubnet1
        - !Ref ExSubnet2

  ExS3VPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref ExConnectVpc
      ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
      VpcEndpointType: Interface
      SubnetIds:
        - !Ref ExSubnet1
        - !Ref ExSubnet2

  ExRDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for RDS database instance to allow traffic only within the VPC
      VpcId: !Ref ExConnectVpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: !GetAtt ExConnectVpc.CidrBlock  # Allows traffic from within the VPC
      SecurityGroupEgress:
        - IpProtocol: -1  # Allows all outbound traffic
          FromPort: -1
          ToPort: -1
          CidrIp: !GetAtt ExConnectVpc.CidrBlock  # Ensures all outbound traffic is restricted to the VPC

Outputs:
  VpcId:
    Value: !Ref ExConnectVpc
    Export:
      Name: !Sub ${AWS::StackName}-VpcId

  VpcCidr:
    Value: !GetAtt ExConnectVpc.CidrBlock
    Export:
      Name: !Sub ${AWS::StackName}-VpcCidr

  SubnetIds:
    Value:
      !Join [
        ",",
        [!Ref ExSubnet1, !Ref ExSubnet2],
      ]
    Export:
      Name: !Sub ${AWS::StackName}-SubnetIds

  RDSSecurityGroupId:
    Description: The ID of the security group for the RDS instance
    Value: !Ref ExRDSSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-RdsSecurityGroupID